version: 2
jobs:
  build:
    docker:
      - image: admesg/pism-debian:0.1.5
        environment:
          PETSC_DIR: /usr/lib/petscdir/petsc3.10/x86_64-linux-gnu-real
          # Allow oversubscribing (i.e. running more MPI processes than the number of cores
          # available). Run "ompi_info --all" to get the list of MCA parameters.
          OMPI_MCA_rmaps_base_oversubscribe: yes
          # Add a flag needed to use OpenMPI in a Docker container.
          # See https://github.com/open-mpi/ompi/issues/4948
          # Tested with OpenMPI version 3.1.3 on Debian 10 (buster)
          OMPI_MCA_btl: "^vader"
          # Print output on failure when running "make test"
          CTEST_OUTPUT_ON_FAILURE: 1

    steps:
      - checkout

      - run:
          name: Build PISM
          # CMAKE_BUILD_TYPE=Debug enables pedantic compiler warnings and one or two extra
          # tests.
          #
          # CMAKE_CXX_FLAGS is set to a) disable warnings caused by OpenMPI internals and
          # b) treat all warnings as errors except for the one about the "noreturn"
          # attribute.
          #
          # We need Python bindings and extra executables for many regression tests.
          #
          # PROJ, NetCDF built with parallel I/O and PnetCDF are optional dependencies but
          # we should build and test the code that uses them.
          command: >-
            mkdir -p build &&
            cd build &&
            CC=mpicc CXX=mpicxx
            cmake ..
            -DCMAKE_BUILD_TYPE=Debug
            -DCMAKE_FIND_ROOT_PATH="/home/builder/local/hdf5;/home/builder/local/netcdf"
            -DCMAKE_CXX_FLAGS="-Wno-cast-function-type -Werror -Wno-error=suggest-attribute=noreturn"
            -DPism_USE_PROJ=Yes
            -DPism_USE_PARALLEL_NETCDF4=Yes
            -DPism_USE_PNETCDF=Yes
            -DPism_BUILD_PYTHON_BINDINGS=Yes
            -DPism_BUILD_EXTRA_EXECS=Yes
            -DPism_BUILD_ICEBIN=YES &&
            make

      - run:
          name: Run PISM test suite
          command: >-
            cd build &&
            export PYTHONPATH=$PWD/site-packages:$PYTHONPATH &&
            make test
