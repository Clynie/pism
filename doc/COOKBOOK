
Ed's cookbook for maintaining PISM:


0)  How do I put a completely new subdirectory in tags, with a copy of the trunk?

  svn copy svn+ssh://svn.gna.org/svn/pism/trunk/ svn+ssh://svn.gna.org/svn/pism/tags/stable0.999 \
    -m "Pithy message."


1)  How do I make a .tar.gz from the current svn?

  Assume that pism-stable0.1/ contains the source.  Then:
   
   $ svn export pism-stable0.1/ pism-stable0.1.0           # TELL SVN TO MAKE A CLEAN COPY
   $ tar -cvzf pism-stable0.1.0.tar.gz pism-stable0.1.0/   # TAR IT UP
   $ tar -tvf pism-stable0.1.0.tar.gz                      # CHECK IT FOR CONTENTS
   $ gpg --detach pism-stable0.1.0.tar.gz                  # GENERATE .sig SIGNATURE FILE;
                                                           # passphrase in wallet
   $ scp pism-stable0.1.0.tar.gz pism-stable0.1.0.tar.gz.sig \
        bueler@download.gna.org:/upload/pism/              # UPLOAD


2)  Which files do I need to keep up-to-date at www.pism-docs.org for stable docs?

  These files:
   
   doc/
     refman.pdf
     manual.pdf
     installation.pdf


3)  How do I upload a recent version of the C++ class browser?

  Build it, tar it, send to dogbert, then get on dogbert and unzip it in the right place:
  
   $ cd doc && make browser
   $ tar -cvzf browser_recent.tar.gz doxy/html/
   $ scp browser_recent.tar.gz bueler@dogbert.gi.alaska.edu:~bueler/pismdocs/
   $ ssh -XY bueler@dogbert.gi.alaska.edu                   # ALIASED TO "dogbert"
   $ rm -rf doxy/                                           # CLEAR OUT OLD
   $ tar -xvf browser_recent.tar.gz                         # CREATES doxy/html/
   
  Now try "firefox www.pism-docs.org/doxy/html/index.html" on remote machine.  If
  success, log off of dogbert.
  
  Also consider doing

   $ scp refman.pdf bueler@dogbert.gi.alaska.edu:~bueler/pismdocs/refman-dev.pdf

 
4)  How big is the PISM source code?

   $ cd src
   $ wc -l *.cc base/*.hh base/*.cc coupler/*.hh coupler/*.cc eismint/*.hh eismint/*.cc \
           ismip/*.hh ismip/*.cc verif/*.hh verif/*.cc verif/*.c \
           ../examples/*/*.py ../examples/*/*.sh
   
  In r504 this gives 34,019 lines.  Another way to count is to use  wc -c  on the same
  files.  In r504 this gives 1325585 characters or about 16,000 (= 1325585.0 / 81.0) lines
  if a line is defined as 80 screen characters.
  
  The biggest files are base/iceModelVec.cc and base/nc_util.cc.

